{"version":3,"file":"path-489c182e.js","sources":["../../node_modules/d3-path/src/path.js","../../node_modules/d3-shape/src/constant.js","../../node_modules/d3-shape/src/path.js"],"sourcesContent":["const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? Weâ€™re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","import {Path} from \"d3-path\";\n\nexport function withPath(shape) {\n  let digits = 3;\n\n  shape.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) {\n      digits = null;\n    } else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    return shape;\n  };\n\n  return () => new Path(digits);\n}\n"],"names":["pi","Math","PI","tau","epsilon","tauEpsilon","append","strings","this","_","i","n","length","arguments","Path","constructor","digits","_x0","_y0","_x1","_y1","_append","d","floor","Error","k","round","appendRound","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","constant","withPath","shape","RangeError"],"mappings":"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","x_google_ignoreList":[0,1,2]}