{"version":3,"file":"styles-c10674c1-419a122a.js","sources":["../../node_modules/d3-selection/src/selectAll.js","../../node_modules/dagre-d3-es/src/dagre-js/util.js","../../node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","../../node_modules/mermaid/dist/styles-c10674c1.js"],"sourcesContent":["import array from \"./array.js\";\nimport {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([array(selector)], root);\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { curveLinear, select, selectAll } from \"d3\";\nimport { k as getStylesFromArray, l as log, m as evaluate, c as getConfig, e as common, r as renderKatex, n as interpolateToCurve, u as utils, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport * as khroma from \"khroma\";\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    classStr = classStr + \" flowchart-label\";\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    log.info(\"vertex\", vertex, vertex.labelType);\n    if (vertex.labelType === \"markdown\") {\n      log.info(\"vertex\", vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        const node = {\n          label: vertexText\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n        const rows = vertexText.split(common.lineBreakRegex);\n        for (const row of rows) {\n          const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n          tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n          tspan.setAttribute(\"dy\", \"1em\");\n          tspan.setAttribute(\"x\", \"1\");\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      case \"doublecircle\":\n        _shape = \"doublecircle\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    const labelText = await renderKatex(vertexText, getConfig());\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText,\n      labelType: vertex.labelType,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n    log.info(\"setNode\", {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  log.info(\"abc78 edges = \", edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n    if (linkIdCnt[linkIdBase] === void 0) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n    log.info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = { style: \"\", labelStyle: \"\" };\n    edgeData.minlen = edge.length || 1;\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    edgeData.arrowTypeStart = \"arrow_open\";\n    edgeData.arrowTypeEnd = \"arrow_open\";\n    switch (edge.type) {\n      case \"double_arrow_cross\":\n        edgeData.arrowTypeStart = \"arrow_cross\";\n      case \"arrow_cross\":\n        edgeData.arrowTypeEnd = \"arrow_cross\";\n        break;\n      case \"double_arrow_point\":\n        edgeData.arrowTypeStart = \"arrow_point\";\n      case \"arrow_point\":\n        edgeData.arrowTypeEnd = \"arrow_point\";\n        break;\n      case \"double_arrow_circle\":\n        edgeData.arrowTypeStart = \"arrow_circle\";\n      case \"arrow_circle\":\n        edgeData.arrowTypeEnd = \"arrow_circle\";\n        break;\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    switch (edge.stroke) {\n      case \"normal\":\n        style = \"fill:none;\";\n        if (defaultStyle !== void 0) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== void 0) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"solid\";\n        break;\n      case \"dotted\":\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"dotted\";\n        edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n        break;\n      case \"thick\":\n        edgeData.thickness = \"thick\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n        break;\n      case \"invisible\":\n        edgeData.thickness = \"invisible\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 0;fill:none;\";\n        break;\n    }\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n    }\n    edgeData.labelType = edge.labelType;\n    edgeData.label = await renderKatex(edge.text.replace(common.lineBreakRegex, \"\\n\"), getConfig());\n    if (edge.style === void 0) {\n      edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n    }\n    edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n    edgeData.id = linkId;\n    edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 0,\n    marginy: 0\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info(\"Subgraphs - \", subGraphs);\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    log.info(\"Subgraph - \", subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      \"group\",\n      void 0,\n      subG.classes,\n      subG.dir\n    );\n  }\n  const vert = diagObj.db.getVertices();\n  const edges = diagObj.db.getEdges();\n  log.info(\"Edges\", edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g);\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"point\", \"circle\", \"cross\"], \"flowchart\", id);\n  utils.insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = select(\"#\" + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRendererV2 = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nexport {\n  flowStyles as a,\n  flowRendererV2 as f\n};\n"],"names":["selectAll","selector","Selection","document","querySelectorAll","documentElement","array","root","isSubgraph","g","v","children","length","edgeToId","e","escapeId","w","name","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","attr","applyClass","classFn","otherClasses","applyTransition","selection","graph","_.isPlainObject","transition","_.isFunction","addHtmlLabel","node","fo","append","div","label","insert","html","labelStyle","style","client","getBoundingClientRect","width","height","conf","addVertices","async","vert","svgId","doc","diagObj","svg","select","keys","Object","id","vertex","classStr","classes","join","styles","getStylesFromArray","vertexNode","vertexText","text","log","info","labelType","evaluate","getConfig","flowchart","htmlLabels","parentNode","removeChild","svgLabel","createElementNS","setAttribute","rows","split","common","lineBreakRegex","row","tspan","setAttributeNS","textContent","appendChild","radius","_shape","type","labelText","renderKatex","setNode","shape","rx","ry","class","link","linkTarget","tooltip","db","getTooltip","domId","lookUpDomId","haveCallback","dir","props","padding","addEdges","edges","log$1","defaultStyle","defaultLabelStyle","cnt","linkIdCnt","defaultStyles","edge","linkIdBase","start","end","linkId","linkNameStart","linkNameEnd","edgeData","minlen","arrowhead","arrowTypeStart","arrowTypeEnd","stroke","thickness","pattern","interpolate","curve","interpolateToCurve","curveLinear","defaultInterpolate","arrowheadStyle","labelpos","setEdge","flowRendererV2","setConf","cnf","key","getClasses","draw","_version","getDirection","securityLevel","conf2","nodeSpacing","rankSpacing","sandboxElement","nodes","contentDocument","body","graphlib.Graph","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","i","j","setParent","element","render","utils","insertTitle","titleTopMargin","getDiagramTitle","setupGraphViewbox","diagramPadding","useMaxWidth","indexNodes","labels","dim","getBBox","rect","insertBefore","firstChild","forEach","linkNode","flowStyles","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","color","opacity","channel","khroma.channel","r","b","khroma.rgba","fade","clusterBkg","clusterBorder","tertiaryColor","border2"],"mappings":"iSAGe,SAAQA,EAACC,GACf,MAAoB,iBAAbA,EACR,IAAIC,EAAU,CAACC,SAASC,iBAAiBH,IAAY,CAACE,SAASE,kBAC/D,IAAIH,EAAU,CAACI,EAAML,IAAYM,EACzC,CCEA,SAASC,EAAWC,EAAGC,GACrB,QAASD,EAAEE,SAASD,GAAGE,MACzB,CAEA,SAASC,EAASC,GAChB,OAAOC,EAASD,EAAEJ,GAAK,IAAMK,EAASD,EAAEE,GAAK,IAAMD,EAASD,EAAEG,KAChE,CAEA,IAAIC,EAAW,KACf,SAASH,EAASI,GAChB,OAAOA,EAAMC,OAAOD,GAAKE,QAAQH,EAAU,OAAS,EACtD,CAEA,SAASI,EAAWC,EAAKC,GACnBA,GACED,EAAAE,KAAK,QAASD,EAEtB,CAEA,SAASE,EAAWH,EAAKI,EAASC,GAC5BD,GACEJ,EAAAE,KAAK,QAASE,GAASF,KAAK,QAASG,EAAe,IAAML,EAAIE,KAAK,SAE3E,CAEA,SAASI,EAAgBC,EAAWrB,GAC9B,IAAAsB,EAAQtB,EAAEsB,QAEVC,GAAAA,EAAgBD,GAAQ,CAC1B,IAAIE,EAAaF,EAAME,WACnBC,GAAAA,EAAaD,GACf,OAAOA,EAAWH,EAErB,CAEM,OAAAA,CACT,CCzCA,SAASK,EAAa5B,EAAM6B,GAC1B,IAAIC,EAAK9B,EAAK+B,OAAO,iBAAiBb,KAAK,QAAS,UAEhDc,EAAMF,EAAGC,OAAO,aAChBC,EAAAd,KAAK,QAAS,gCAElB,IAAIe,EAAQJ,EAAKI,MACjB,cAAeA,GACb,IAAK,WACHD,EAAIE,OAAOD,GACX,MACF,IAAK,SAEHD,EAAIE,QAAO,WACF,OAAAD,CACf,IACM,MACF,QACED,EAAIG,KAAKF,GAGGlB,EAAAiB,EAAKH,EAAKO,YACtBJ,EAAAK,MAAM,UAAW,gBAEjBL,EAAAK,MAAM,cAAe,UAEzB,IAAIC,EAASN,EAAIH,OAAOU,wBAGjB,OAFJT,EAAAZ,KAAK,QAASoB,EAAOE,OAAOtB,KAAK,SAAUoB,EAAOG,QAE9CX,CACT,CC5BA,MAAMY,EAAO,CAAA,EAOPC,EAAcC,eAAeC,EAAM3C,EAAG4C,EAAO9C,EAAM+C,EAAKC,GAC5D,MAAMC,EAAMjD,EAAKkD,OAAO,QAAQJ,OAC1BK,EAAOC,OAAOD,KAAKN,GACzB,IAAA,MAAWQ,KAAMF,EAAM,CACf,MAAAG,EAAST,EAAKQ,GACpB,IAAIE,EAAW,UACXD,EAAOE,QAAQnD,OAAS,IACfkD,EAAAD,EAAOE,QAAQC,KAAK,MAEjCF,GAAsB,mBAChB,MAAAG,EAASC,EAAmBL,EAAOI,QACzC,IACIE,EADAC,OAA6B,IAAhBP,EAAOQ,KAAkBR,EAAOQ,KAAOR,EAAOD,GAG3D,GADJU,EAAIC,KAAK,SAAUV,EAAQA,EAAOW,WACT,aAArBX,EAAOW,UACTF,EAAIC,KAAK,SAAUV,EAAQA,EAAOW,gBAElC,GAAIC,EAASC,IAAYC,UAAUC,YAAa,CAI9CT,EAAahC,EAAaqB,EAHb,CACXhB,MAAO4B,IAE4BhC,OAC1B+B,EAAAU,WAAWC,YAAYX,EAC1C,KAAa,CACL,MAAMY,EAAWzB,EAAI0B,gBAAgB,6BAA8B,QACnED,EAASE,aAAa,QAAShB,EAAOtB,WAAWtB,QAAQ,SAAU,UACnE,MAAM6D,EAAOd,EAAWe,MAAMC,EAAOC,gBACrC,IAAA,MAAWC,KAAOJ,EAAM,CACtB,MAAMK,EAAQjC,EAAI0B,gBAAgB,6BAA8B,SAC1DO,EAAAC,eAAe,uCAAwC,YAAa,YACpED,EAAAN,aAAa,KAAM,OACnBM,EAAAN,aAAa,IAAK,KACxBM,EAAME,YAAcH,EACpBP,EAASW,YAAYH,EACtB,CACYpB,EAAAY,CACd,CAEH,IAAIY,EAAS,EACTC,EAAS,GACb,OAAQ/B,EAAOgC,MACb,IAAK,QACMF,EAAA,EACAC,EAAA,OACT,MACF,IAAK,SA0CL,IAAK,QAML,QACWA,EAAA,aA9CX,IAAK,UACMA,EAAA,WACT,MACF,IAAK,UACMA,EAAA,UACT,MACF,IAAK,MAeL,IAAK,YACMA,EAAA,sBACT,MAdF,IAAK,aACMA,EAAA,aACT,MACF,IAAK,YACMA,EAAA,YACT,MACF,IAAK,YACMA,EAAA,YACT,MACF,IAAK,gBACMA,EAAA,gBACT,MAIF,IAAK,SACMA,EAAA,SACT,MACF,IAAK,UACMA,EAAA,UACT,MACF,IAAK,UACMA,EAAA,UACT,MACF,IAAK,aACMA,EAAA,aACT,MACF,IAAK,WACMA,EAAA,WACT,MAIF,IAAK,eACMA,EAAA,eAKb,MAAME,QAAkBC,EAAY3B,EAAYM,KAC9CjE,EAAAuF,QAAQnC,EAAOD,GAAI,CACnBjB,WAAYsB,EAAOtB,WACnBsD,MAAOL,EACPE,YACAtB,UAAWX,EAAOW,UAClB0B,GAAIP,EACJQ,GAAIR,EACJS,MAAOtC,EACPlB,MAAOqB,EAAOrB,MACdgB,GAAIC,EAAOD,GACXyC,KAAMxC,EAAOwC,KACbC,WAAYzC,EAAOyC,WACnBC,QAAShD,EAAQiD,GAAGC,WAAW5C,EAAOD,KAAO,GAC7C8C,MAAOnD,EAAQiD,GAAGG,YAAY9C,EAAOD,IACrCgD,aAAc/C,EAAO+C,aACrB7D,MAAuB,UAAhBc,EAAOgC,KAAmB,SAAM,EACvCgB,IAAKhD,EAAOgD,IACZhB,KAAMhC,EAAOgC,KACbiB,MAAOjD,EAAOiD,MACdC,QAASrC,IAAYC,UAAUoC,UAEjCzC,EAAIC,KAAK,UAAW,CAClB5B,WAAYsB,EAAOtB,WACnB6B,UAAWX,EAAOW,UAClByB,MAAOL,EACPE,YACAI,GAAIP,EACJQ,GAAIR,EACJS,MAAOtC,EACPlB,MAAOqB,EAAOrB,MACdgB,GAAIC,EAAOD,GACX8C,MAAOnD,EAAQiD,GAAGG,YAAY9C,EAAOD,IACrCb,MAAuB,UAAhBc,EAAOgC,KAAmB,SAAM,EACvCA,KAAMhC,EAAOgC,KACbgB,IAAKhD,EAAOgD,IACZC,MAAOjD,EAAOiD,MACdC,QAASrC,IAAYC,UAAUoC,SAElC,CACH,EACMC,EAAW7D,eAAe8D,EAAOxG,EAAG8C,GACpC2D,EAAA3C,KAAK,iBAAkB0C,GAC3B,IAEIE,EACAC,EAHAC,EAAM,EACNC,EAAY,CAAA,EAGZ,QAAuB,IAAvBL,EAAME,aAAyB,CAC3B,MAAAI,EAAgBrD,EAAmB+C,EAAME,cAC/CA,EAAeI,EAAc3E,MAC7BwE,EAAoBG,EAAc5E,UACnC,CACD,IAAA,MAAW6E,KAAQP,EAAO,CACxBI,IACA,MAAMI,EAAa,KAAOD,EAAKE,MAAQ,IAAMF,EAAKG,SACpB,IAA1BL,EAAUG,IACZH,EAAUG,GAAc,EACxBnD,EAAIC,KAAK,kBAAmBkD,EAAYH,EAAUG,MAElDH,EAAUG,KACVnD,EAAIC,KAAK,kBAAmBkD,EAAYH,EAAUG,KAEpD,IAAIG,EAASH,EAAa,IAAMH,EAAUG,GAC1CnD,EAAIC,KAAK,kCAAmCkD,EAAYG,EAAQN,EAAUG,IACpE,MAAAI,EAAgB,MAAQL,EAAKE,MAC7BI,EAAc,MAAQN,EAAKG,IAC3BI,EAAW,CAAEnF,MAAO,GAAID,WAAY,IAS1C,OARSoF,EAAAC,OAASR,EAAK5G,QAAU,EACf,eAAd4G,EAAK3B,KACPkC,EAASE,UAAY,OAErBF,EAASE,UAAY,SAEvBF,EAASG,eAAiB,aAC1BH,EAASI,aAAe,aAChBX,EAAK3B,MACX,IAAK,qBACHkC,EAASG,eAAiB,cAC5B,IAAK,cACHH,EAASI,aAAe,cACxB,MACF,IAAK,qBACHJ,EAASG,eAAiB,cAC5B,IAAK,cACHH,EAASI,aAAe,cACxB,MACF,IAAK,sBACHJ,EAASG,eAAiB,eAC5B,IAAK,eACHH,EAASI,aAAe,eAG5B,IAAIvF,EAAQ,GACRD,EAAa,GACjB,OAAQ6E,EAAKY,QACX,IAAK,SACKxF,EAAA,kBACa,IAAjBuE,IACMvE,EAAAuE,QAEgB,IAAtBC,IACWzE,EAAAyE,GAEfW,EAASM,UAAY,SACrBN,EAASO,QAAU,QACnB,MACF,IAAK,SACHP,EAASM,UAAY,SACrBN,EAASO,QAAU,SACnBP,EAASnF,MAAQ,iDACjB,MACF,IAAK,QACHmF,EAASM,UAAY,QACrBN,EAASO,QAAU,QACnBP,EAASnF,MAAQ,iCACjB,MACF,IAAK,YACHmF,EAASM,UAAY,YACrBN,EAASO,QAAU,QACnBP,EAASnF,MAAQ,6BAGjB,QAAe,IAAf4E,EAAK5E,MAAkB,CACnB,MAAAqB,EAASC,EAAmBsD,EAAK5E,OACvCA,EAAQqB,EAAOrB,MACfD,EAAasB,EAAOtB,UACrB,CACQoF,EAAAnF,MAAQmF,EAASnF,OAASA,EAC1BmF,EAAApF,WAAaoF,EAASpF,YAAcA,OACpB,IAArB6E,EAAKe,YACPR,EAASS,MAAQC,EAAmBjB,EAAKe,YAAaG,QAChB,IAA7BzB,EAAM0B,mBACfZ,EAASS,MAAQC,EAAmBxB,EAAM0B,mBAAoBD,GAE9DX,EAASS,MAAQC,EAAmBxF,EAAKuF,MAAOE,QAEhC,IAAdlB,EAAKnD,UACY,IAAfmD,EAAK5E,QACPmF,EAASa,eAAiB,eAG5Bb,EAASa,eAAiB,aAC1Bb,EAASc,SAAW,KAEtBd,EAASvD,UAAYgD,EAAKhD,UACjBuD,EAAAvF,YAAcuD,EAAYyB,EAAKnD,KAAKhD,QAAQ+D,EAAOC,eAAgB,MAAOX,UAChE,IAAf8C,EAAK5E,QACEmF,EAAAnF,MAAQmF,EAASnF,OAAS,gDAErCmF,EAASpF,WAAaoF,EAASpF,WAAWtB,QAAQ,SAAU,SAC5D0G,EAASnE,GAAKgE,EACLG,EAAAhE,QAAU,kBAAoB8D,EAAgB,IAAMC,EAC7DrH,EAAEqI,QAAQtB,EAAKE,MAAOF,EAAKG,IAAKI,EAAUV,EAC3C,CACH,EAgHM0B,EAAiB,CACrBC,QAjXc,SAASC,GACjB,MAAAvF,EAAOC,OAAOD,KAAKuF,GACzB,IAAA,MAAWC,KAAOxF,EACXT,EAAAiG,GAAOD,EAAIC,EAEpB,EA6WEhG,cACA8D,WACAmC,WAnHiB,SAAS9E,EAAMd,GACzB,OAAAA,EAAQiD,GAAG2C,YACpB,EAkHEC,KAjHWjG,eAAekB,EAAMT,EAAIyF,EAAU9F,GAC9Ce,EAAIC,KAAK,qBACL,IAAAsC,EAAMtD,EAAQiD,GAAG8C,oBACT,IAARzC,IACIA,EAAA,MAER,MAAM0C,cAAEA,EAAe5E,UAAW6E,GAAU9E,IACtC+E,EAAcD,EAAMC,aAAe,GACnCC,EAAcF,EAAME,aAAe,GACrC,IAAAC,EACkB,YAAlBJ,IACeI,EAAAlG,EAAO,KAAOG,IAEjC,MAAMrD,EAAqCkD,EAAZ,YAAlB8F,EAAqCI,EAAeC,QAAQ,GAAGC,gBAAgBC,KAAe,QACrGxG,EAAwB,YAAlBiG,EAA8BI,EAAeC,QAAQ,GAAGC,gBAAkB1J,SAChFM,EAAI,IAAIsJ,EAAe,CAC3BC,YAAY,EACZC,UAAU,IACTC,SAAS,CACVC,QAAStD,EACTuD,QAASX,EACTY,QAASX,EACTY,QAAS,EACTC,QAAS,IACRC,qBAAoB,WACrB,MAAO,EACX,IACM,IAAAC,EACE,MAAAC,EAAYnH,EAAQiD,GAAGmE,eACzBzD,EAAA3C,KAAK,eAAgBmG,GACzB,IAAA,IAASE,EAAKF,EAAU9J,OAAS,EAAGgK,GAAM,EAAGA,IAC3CH,EAAOC,EAAUE,GACb1D,EAAA3C,KAAK,cAAekG,GACxBlH,EAAQiD,GAAGqE,UACTJ,EAAK7G,GACL,CAAES,KAAMoG,EAAKK,MAAOjF,KAAM4E,EAAKjG,WAC/B,aACA,EACAiG,EAAK1G,QACL0G,EAAK5D,KAGH,MAAAzD,EAAOG,EAAQiD,GAAGuE,cAClB9D,EAAQ1D,EAAQiD,GAAGwE,WACrB9D,EAAA3C,KAAK,QAAS0C,GAClB,IAAIgE,EAAI,EACR,IAAKA,EAAIP,EAAU9J,OAAS,EAAGqK,GAAK,EAAGA,IAAK,CAC1CR,EAAOC,EAAUO,GACPjL,EAAA,WAAWsC,OAAO,QAC5B,IAAA,IAAS4I,EAAI,EAAGA,EAAIT,EAAKb,MAAMhJ,OAAQsK,IACrC5G,EAAIC,KAAK,uBAAwBkG,EAAKb,MAAMsB,GAAIT,EAAK7G,IACrDnD,EAAE0K,UAAUV,EAAKb,MAAMsB,GAAIT,EAAK7G,GAEnC,OACKV,EAAYE,EAAM3C,EAAGmD,EAAIrD,EAAM+C,EAAKC,SACpCyD,EAASC,EAAOxG,GACtB,MAAM+C,EAAMjD,EAAKkD,OAAO,QAAQG,OAC1BwH,EAAU7K,EAAKkD,OAAO,IAAMG,EAAK,MAKnC,SAJEyH,EAAOD,EAAS3K,EAAG,CAAC,QAAS,SAAU,SAAU,YAAamD,GAC9D0H,EAAAC,YAAY/H,EAAK,qBAAsBgG,EAAMgC,eAAgBjI,EAAQiD,GAAGiF,mBAC9EC,EAAkBjL,EAAG+C,EAAKgG,EAAMmC,eAAgBnC,EAAMoC,aAC9CrI,EAAAiD,GAAGqF,WAAW,WAAaZ,IAC9BzB,EAAM5E,WAAY,CACrB,MAAMkH,EAASxI,EAAIlD,iBAAiB,QAAUwD,EAAK,wBACnD,IAAA,MAAWpB,KAASsJ,EAAQ,CACpB,MAAAC,EAAMvJ,EAAMwJ,UACZC,EAAO3I,EAAI0B,gBAAgB,6BAA8B,QAC1DiH,EAAAhH,aAAa,KAAM,GACnBgH,EAAAhH,aAAa,KAAM,GACnBgH,EAAAhH,aAAa,QAAS8G,EAAIhJ,OAC1BkJ,EAAAhH,aAAa,SAAU8G,EAAI/I,QAC1BR,EAAA0J,aAAaD,EAAMzJ,EAAM2J,WAChC,CACF,CACYxI,OAAOD,KAAKN,GACpBgJ,SAAQ,SAASlD,GACd,MAAArF,EAAST,EAAK8F,GACpB,GAAIrF,EAAOwC,KAAM,CACf,MAAMjE,EAAOqB,EAAO,IAAMG,EAAK,SAAWsF,EAAM,MAChD,GAAI9G,EAAM,CACR,MAAMiE,EAAO/C,EAAI0B,gBAAgB,6BAA8B,KAC/DqB,EAAKb,eAAe,6BAA8B,QAAS3B,EAAOE,QAAQC,KAAK,MAC/EqC,EAAKb,eAAe,6BAA8B,OAAQ3B,EAAOwC,MAC5DA,EAAAb,eAAe,6BAA8B,MAAO,YACnC,YAAlB+D,EACGlD,EAAAb,eAAe,6BAA8B,SAAU,QACnD3B,EAAOyC,YAChBD,EAAKb,eAAe,6BAA8B,SAAU3B,EAAOyC,YAE/D,MAAA+F,EAAWjK,EAAKK,QAAO,WACpB,OAAA4D,CACR,GAAE,gBACGJ,EAAQ7D,EAAKqB,OAAO,oBACtBwC,GACFoG,EAAS/J,QAAO,WACd,OAAO2D,EAAM7D,MACzB,IAEc,MAAAI,EAAQJ,EAAKqB,OAAO,UACtBjB,GACF6J,EAAS/J,QAAO,WACd,OAAOE,EAAMJ,MACzB,GAEO,CACF,CACL,GACA,GAkIMkK,EAnHaC,GAAY,8BACZA,EAAQC,2BACdD,EAAQE,eAAiBF,EAAQG,uDAGlCH,EAAQI,2DAGPJ,EAAQI,yDAITJ,EAAQE,eAAiBF,EAAQG,0BAChCH,EAAQE,eAAiBF,EAAQG,oHAQlCH,EAAQK,yBACNL,EAAQM,keA2BVN,EAAQO,4DAINP,EAAQQ,iFAKRR,EAAQQ,6EAKER,EAAQS,kFAGNT,EAAQS,qCACpBT,EAAQS,mIA1ET,EAACC,EAAOC,KACnB,MAAMC,EAAUC,EACVC,EAAIF,EAAQF,EAAO,KACnBxM,EAAI0M,EAAQF,EAAO,KACnBK,EAAIH,EAAQF,EAAO,KACzB,OAAOM,EAAYF,EAAG5M,EAAG6M,EAAGJ,EAAO,EA4EbM,CAAKjB,EAAQS,oBAAqB,wEAK9CT,EAAQkB,4BACNlB,EAAQmB,+EAKVnB,EAAQI,uDAIPJ,EAAQI,qDAGRJ,EAAQI,+JAQFJ,EAAQC,sDAETD,EAAQoB,yCACFpB,EAAQqB,8KASpBrB,EAAQG","x_google_ignoreList":[0,1,2,3]}