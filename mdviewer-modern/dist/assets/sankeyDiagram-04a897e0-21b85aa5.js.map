{"version":3,"file":"sankeyDiagram-04a897e0-21b85aa5.js","sources":["../../node_modules/d3-sankey/node_modules/d3-array/src/max.js","../../node_modules/d3-sankey/node_modules/d3-array/src/min.js","../../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","../../node_modules/d3-sankey/src/align.js","../../node_modules/d3-sankey/src/constant.js","../../node_modules/d3-sankey/src/sankey.js","../../node_modules/d3-sankey/node_modules/d3-path/src/path.js","../../node_modules/d3-sankey/node_modules/d3-shape/src/constant.js","../../node_modules/d3-sankey/node_modules/d3-shape/src/point.js","../../node_modules/d3-sankey/node_modules/d3-shape/src/array.js","../../node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js","../../node_modules/d3-sankey/src/sankeyLinkHorizontal.js","../../node_modules/mermaid/dist/sankeyDiagram-04a897e0.js"],"sourcesContent":["export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","import { c as getConfig, g as getAccTitle, s as setAccTitle, a as getAccDescription, b as setAccDescription, t as getDiagramTitle, q as setDiagramTitle, v as clear$1, e as common, K as defaultConfig, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { select, scaleOrdinal, schemeTableau10 } from \"d3\";\nimport { sankey, sankeyLinkHorizontal, sankeyLeft, sankeyRight, sankeyCenter, sankeyJustify } from \"d3-sankey\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 9], $V1 = [1, 10], $V2 = [1, 5, 10, 12];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SANKEY\": 4, \"NEWLINE\": 5, \"csv\": 6, \"opt_eof\": 7, \"record\": 8, \"csv_tail\": 9, \"EOF\": 10, \"field[source]\": 11, \"COMMA\": 12, \"field[target]\": 13, \"field[value]\": 14, \"field\": 15, \"escaped\": 16, \"non_escaped\": 17, \"DQUOTE\": 18, \"ESCAPED_TEXT\": 19, \"NON_ESCAPED_TEXT\": 20, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SANKEY\", 5: \"NEWLINE\", 10: \"EOF\", 11: \"field[source]\", 12: \"COMMA\", 13: \"field[target]\", 14: \"field[value]\", 18: \"DQUOTE\", 19: \"ESCAPED_TEXT\", 20: \"NON_ESCAPED_TEXT\" },\n    productions_: [0, [3, 4], [6, 2], [9, 2], [9, 0], [7, 1], [7, 0], [8, 5], [15, 1], [15, 1], [16, 3], [17, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 7:\n          const source = yy.findOrCreateNode($$[$0 - 4].trim().replaceAll('\"\"', '\"'));\n          const target = yy.findOrCreateNode($$[$0 - 2].trim().replaceAll('\"\"', '\"'));\n          const value = parseFloat($$[$0].trim());\n          yy.addLink(source, target, value);\n          break;\n        case 8:\n        case 9:\n        case 11:\n          this.$ = $$[$0];\n          break;\n        case 10:\n          this.$ = $$[$0 - 1];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, { 5: [1, 3] }, { 6: 4, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 1: [2, 6], 7: 11, 10: [1, 12] }, o($V1, [2, 4], { 9: 13, 5: [1, 14] }), { 12: [1, 15] }, o($V2, [2, 8]), o($V2, [2, 9]), { 19: [1, 16] }, o($V2, [2, 11]), { 1: [2, 1] }, { 1: [2, 5] }, o($V1, [2, 2]), { 6: 17, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 15: 18, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 18: [1, 19] }, o($V1, [2, 3]), { 12: [1, 20] }, o($V2, [2, 10]), { 15: 21, 16: 7, 17: 8, 18: $V0, 20: $V1 }, o([1, 5, 10], [2, 7])],\n    defaultActions: { 11: [2, 1], 12: [2, 5] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            this.pushState(\"csv\");\n            return 4;\n          case 1:\n            return 10;\n          case 2:\n            return 5;\n          case 3:\n            return 12;\n          case 4:\n            this.pushState(\"escaped_text\");\n            return 18;\n          case 5:\n            return 20;\n          case 6:\n            this.popState(\"escaped_text\");\n            return 18;\n          case 7:\n            return 19;\n        }\n      },\n      rules: [/^(?:sankey-beta\\b)/i, /^(?:$)/i, /^(?:((\\u000D\\u000A)|(\\u000A)))/i, /^(?:(\\u002C))/i, /^(?:(\\u0022))/i, /^(?:([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])*)/i, /^(?:(\\u0022)(?!(\\u0022)))/i, /^(?:(([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])|(\\u002C)|(\\u000D)|(\\u000A)|(\\u0022)(\\u0022))*)/i],\n      conditions: { \"csv\": { \"rules\": [1, 2, 3, 4, 5, 6, 7], \"inclusive\": false }, \"escaped_text\": { \"rules\": [6, 7], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet links = [];\nlet nodes = [];\nlet nodesMap = {};\nconst clear = () => {\n  links = [];\n  nodes = [];\n  nodesMap = {};\n  clear$1();\n};\nclass SankeyLink {\n  constructor(source, target, value = 0) {\n    this.source = source;\n    this.target = target;\n    this.value = value;\n  }\n}\nconst addLink = (source, target, value) => {\n  links.push(new SankeyLink(source, target, value));\n};\nclass SankeyNode {\n  constructor(ID) {\n    this.ID = ID;\n  }\n}\nconst findOrCreateNode = (ID) => {\n  ID = common.sanitizeText(ID, getConfig());\n  if (!nodesMap[ID]) {\n    nodesMap[ID] = new SankeyNode(ID);\n    nodes.push(nodesMap[ID]);\n  }\n  return nodesMap[ID];\n};\nconst getNodes = () => nodes;\nconst getLinks = () => links;\nconst getGraph = () => ({\n  nodes: nodes.map((node) => ({ id: node.ID })),\n  links: links.map((link) => ({\n    source: link.source.ID,\n    target: link.target.ID,\n    value: link.value\n  }))\n});\nconst db = {\n  nodesMap,\n  getConfig: () => getConfig().sankey,\n  getNodes,\n  getLinks,\n  getGraph,\n  addLink,\n  findOrCreateNode,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  getDiagramTitle,\n  setDiagramTitle,\n  clear\n};\nconst _Uid = class _Uid2 {\n  static next(name) {\n    return new _Uid2(name + ++_Uid2.count);\n  }\n  constructor(id) {\n    this.id = id;\n    this.href = `#${id}`;\n  }\n  toString() {\n    return \"url(\" + this.href + \")\";\n  }\n};\n_Uid.count = 0;\nlet Uid = _Uid;\nconst alignmentsMap = {\n  left: sankeyLeft,\n  right: sankeyRight,\n  center: sankeyCenter,\n  justify: sankeyJustify\n};\nconst draw = function(text, id, _version, diagObj) {\n  const { securityLevel, sankey: conf } = getConfig();\n  const defaultSankeyConfig = defaultConfig.sankey;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n  const width = (conf == null ? void 0 : conf.width) ?? defaultSankeyConfig.width;\n  const height = (conf == null ? void 0 : conf.height) ?? defaultSankeyConfig.width;\n  const useMaxWidth = (conf == null ? void 0 : conf.useMaxWidth) ?? defaultSankeyConfig.useMaxWidth;\n  const nodeAlignment = (conf == null ? void 0 : conf.nodeAlignment) ?? defaultSankeyConfig.nodeAlignment;\n  const prefix = (conf == null ? void 0 : conf.prefix) ?? defaultSankeyConfig.prefix;\n  const suffix = (conf == null ? void 0 : conf.suffix) ?? defaultSankeyConfig.suffix;\n  const showValues = (conf == null ? void 0 : conf.showValues) ?? defaultSankeyConfig.showValues;\n  const graph = diagObj.db.getGraph();\n  const nodeAlign = alignmentsMap[nodeAlignment];\n  const nodeWidth = 10;\n  const sankey$1 = sankey().nodeId((d) => d.id).nodeWidth(nodeWidth).nodePadding(10 + (showValues ? 15 : 0)).nodeAlign(nodeAlign).extent([\n    [0, 0],\n    [width, height]\n  ]);\n  sankey$1(graph);\n  const colorScheme = scaleOrdinal(schemeTableau10);\n  svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\".node\").data(graph.nodes).join(\"g\").attr(\"class\", \"node\").attr(\"id\", (d) => (d.uid = Uid.next(\"node-\")).id).attr(\"transform\", function(d) {\n    return \"translate(\" + d.x0 + \",\" + d.y0 + \")\";\n  }).attr(\"x\", (d) => d.x0).attr(\"y\", (d) => d.y0).append(\"rect\").attr(\"height\", (d) => {\n    return d.y1 - d.y0;\n  }).attr(\"width\", (d) => d.x1 - d.x0).attr(\"fill\", (d) => colorScheme(d.id));\n  const getText = ({ id: id2, value }) => {\n    if (!showValues) {\n      return id2;\n    }\n    return `${id2}\n${prefix}${Math.round(value * 100) / 100}${suffix}`;\n  };\n  svg.append(\"g\").attr(\"class\", \"node-labels\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 14).selectAll(\"text\").data(graph.nodes).join(\"text\").attr(\"x\", (d) => d.x0 < width / 2 ? d.x1 + 6 : d.x0 - 6).attr(\"y\", (d) => (d.y1 + d.y0) / 2).attr(\"dy\", `${showValues ? \"0\" : \"0.35\"}em`).attr(\"text-anchor\", (d) => d.x0 < width / 2 ? \"start\" : \"end\").text(getText);\n  const link = svg.append(\"g\").attr(\"class\", \"links\").attr(\"fill\", \"none\").attr(\"stroke-opacity\", 0.5).selectAll(\".link\").data(graph.links).join(\"g\").attr(\"class\", \"link\").style(\"mix-blend-mode\", \"multiply\");\n  const linkColor = (conf == null ? void 0 : conf.linkColor) || \"gradient\";\n  if (linkColor === \"gradient\") {\n    const gradient = link.append(\"linearGradient\").attr(\"id\", (d) => (d.uid = Uid.next(\"linearGradient-\")).id).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", (d) => d.source.x1).attr(\"x2\", (d) => d.target.x0);\n    gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", (d) => colorScheme(d.source.id));\n    gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", (d) => colorScheme(d.target.id));\n  }\n  let coloring;\n  switch (linkColor) {\n    case \"gradient\":\n      coloring = (d) => d.uid;\n      break;\n    case \"source\":\n      coloring = (d) => colorScheme(d.source.id);\n      break;\n    case \"target\":\n      coloring = (d) => colorScheme(d.target.id);\n      break;\n    default:\n      coloring = linkColor;\n  }\n  link.append(\"path\").attr(\"d\", sankeyLinkHorizontal()).attr(\"stroke\", coloring).attr(\"stroke-width\", (d) => Math.max(1, d.width));\n  setupGraphViewbox(void 0, svg, 0, useMaxWidth);\n};\nconst renderer = {\n  draw\n};\nconst prepareTextForParsing = (text) => {\n  const textToParse = text.replaceAll(/^[^\\S\\n\\r]+|[^\\S\\n\\r]+$/g, \"\").replaceAll(/([\\n\\r])+/g, \"\\n\").trim();\n  return textToParse;\n};\nconst originalParse = parser$1.parse.bind(parser$1);\nparser$1.parse = (text) => originalParse(prepareTextForParsing(text));\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer\n};\nexport {\n  diagram\n};\n"],"names":["max","values","valueof","value","index","min","sum","targetDepth","d","target","depth","justify","node","n","sourceLinks","length","constant","x","ascendingSourceBreadth","a","b","ascendingBreadth","source","ascendingTargetBreadth","y0","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","id","get","Error","computeLinkBreadths","y1","link","width","targetLinks","Sankey","py","sort","linkSort","x0","x1","dx","dy","align","iterations","sankey","apply","arguments","i","entries","Map","map","push","computeNodeLinks","fixedValue","Math","computeNodeValues","current","Set","next","size","add","computeNodeDepths","height","computeNodeHeights","columns","kx","Array","floor","call","layer","column","computeNodeLayers","c","ky","y","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","w","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","update","nodeId","_","nodeAlign","nodeSort","nodeWidth","nodePadding","extent","pi","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","path","p","prototype","constructor","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","x2","y2","arcTo","r","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","cos","sin","cw","da","rect","h","toString","slice","linkSource","linkTarget","curveHorizontal","context","linkHorizontal","curve","pointX","pointY","buffer","argv","s","t","horizontalSource","horizontalTarget","parser","o","k","o2","$V0","$V1","$V2","parser2","trace","yy","symbols_","error","start","SANKEY","NEWLINE","csv","opt_eof","record","csv_tail","EOF","COMMA","field","escaped","non_escaped","DQUOTE","ESCAPED_TEXT","NON_ESCAPED_TEXT","$accept","$end","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","findOrCreateNode","trim","replaceAll","parseFloat","addLink","$","table","defaultActions","parseError","str","hash","recoverable","parse","input","self","stack","tstack","vstack","lstack","args","lexer2","Object","create","lexer","sharedState","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","symbol","state","action","len","newState","expected","token","yyval","pop","lex","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","inclusive","escaped_text","INITIAL","Parser","parser$1","nodesMap","SankeyLink","SankeyNode","ID","db","getConfig","getNodes","getLinks","getGraph","common","sanitizeText","getAccTitle","setAccTitle","getAccDescription","setAccDescription","getDiagramTitle","setDiagramTitle","clear","_Uid","_Uid2","name","count","href","Uid","alignmentsMap","left","right","center","renderer","draw","_version","diagObj","securityLevel","conf","defaultSankeyConfig","defaultConfig","sandboxElement","select","root","contentDocument","body","svg","useMaxWidth","nodeAlignment","prefix","suffix","showValues","sankey$1","colorScheme","scaleOrdinal","schemeTableau10","append","attr","selectAll","data","uid","id2","round","style","linkColor","gradient","coloring","setupGraphViewbox$1","originalParse","bind","prepareTextForParsing","diagram"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}