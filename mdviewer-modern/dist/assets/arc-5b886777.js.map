{"version":3,"file":"arc-5b886777.js","sources":["../../node_modules/d3-shape/src/arc.js"],"sourcesContent":["import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"],"names":["arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","cornerTangents","x0","y0","x1","y1","r1","rc","cw","x01","y01","lo","sqrt","ox","oy","x11","y11","x10","y10","x00","y00","dx","dy","d2","r","D","max","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","arc","cornerRadius","constant","padRadius","context","path","withPath","buffer","r0","apply","this","arguments","a0","halfPi","a1","da","abs","epsilon","tau","moveTo","cos","sin","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","min","rc0","rc1","p0","asin","p1","oc","pi","x2","y2","x3","y3","x32","y32","t","intersect","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","centroid","a","_","length"],"mappings":"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","x_google_ignoreList":[0]}