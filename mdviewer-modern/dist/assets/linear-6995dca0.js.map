{"version":3,"file":"linear-6995dca0.js","sources":["../../node_modules/d3-array/src/ascending.js","../../node_modules/d3-array/src/descending.js","../../node_modules/d3-array/src/bisector.js","../../node_modules/d3-array/src/bisect.js","../../node_modules/d3-array/src/number.js","../../node_modules/d3-array/src/ticks.js","../../node_modules/d3-interpolate/src/numberArray.js","../../node_modules/d3-interpolate/src/array.js","../../node_modules/d3-interpolate/src/date.js","../../node_modules/d3-interpolate/src/object.js","../../node_modules/d3-interpolate/src/value.js","../../node_modules/d3-interpolate/src/round.js","../../node_modules/d3-format/src/formatDecimal.js","../../node_modules/d3-format/src/exponent.js","../../node_modules/d3-format/src/formatSpecifier.js","../../node_modules/d3-format/src/formatPrefixAuto.js","../../node_modules/d3-format/src/formatRounded.js","../../node_modules/d3-format/src/formatTypes.js","../../node_modules/d3-format/src/identity.js","../../node_modules/d3-format/src/locale.js","../../node_modules/d3-format/src/defaultLocale.js","../../node_modules/d3-format/src/formatGroup.js","../../node_modules/d3-format/src/formatNumerals.js","../../node_modules/d3-format/src/formatTrim.js","../../node_modules/d3-scale/src/number.js","../../node_modules/d3-scale/src/continuous.js","../../node_modules/d3-scale/src/constant.js","../../node_modules/d3-scale/src/tickFormat.js","../../node_modules/d3-format/src/precisionPrefix.js","../../node_modules/d3-format/src/precisionRound.js","../../node_modules/d3-format/src/precisionFixed.js","../../node_modules/d3-scale/src/linear.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","export default function number(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","export default function constants(x) {\n  return function() {\n    return x;\n  };\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function tickFormat(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"names":["ascending","a","b","NaN","descending","bisector","f","compare1","compare2","delta","left","x","lo","hi","length","mid","d","zero","center","i","right","bisectRight","bisect","e10","Math","sqrt","e5","e2","tickSpec","start","stop","count","step","max","power","floor","log10","error","pow","factor","i1","i2","inc","round","tickIncrement","tickStep","reverse","numberArray","n","min","c","slice","t","genericArray","nb","na","Array","value","date","Date","setTime","object","k","interpolate","constant","number","color","rgb","string","ArrayBuffer","isView","DataView","isArray","valueOf","toString","isNaN","interpolateRound","formatDecimalParts","p","toExponential","indexOf","coefficient","exponent","abs","prefixExponent","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","width","comma","precision","trim","type","this","formatRounded","join","prototype","formatTypes","toFixed","toLocaleString","replace","e","g","toPrecision","o","r","s","X","toUpperCase","identity$1","locale","format","formatPrefix","map","prefixes","formatLocale","grouping","thousands","group","identity","call","Number","j","push","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","String","percent","minus","nan","newFormat","prefix","test","toLowerCase","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","out","i0","formatTrim","charCodeAt","Infinity","padding","unit","normalize","bimap","domain","range","d0","d1","r0","r1","polymap","copy","source","target","clamp","unknown","transformer","transform","untransform","piecewise","output","input","interpolateValue","rescale","scale","invert","y","interpolateNumber","_","arguments","from","rangeRound","u","continuous","tickFormat","precisionPrefix","precisionRound","precisionFixed","linearish","ticks","nice","prestep","maxIter","ceil","linear","initRange","apply"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}